{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,mCAAML,EAAMI,QAAQE,QACpB,kCAAKN,EAAMI,QAAQG,cCLdC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAY,YAAjB,SACED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCLhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAO,SACPF,YAAaA,EACbG,SAAUF,MCgCHG,G,wDAlCX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTR,SAAU,GACVS,YAAa,IAJP,E,gEAQO,IAAD,OAChBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,+BAGnC,IAAD,SAC6BE,KAAKR,MAA/BR,EADH,EACGA,SAAUS,EADb,EACaA,YACZQ,EAAmBjB,EAASkB,QAAQ,SAAAlB,GAAQ,OAC1CA,EAASH,KAAKsB,cAAcC,SAASX,EAAYU,kBAG7D,OACI,sBAAK3B,UAAU,MAAf,UACI,oDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OACf,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE1C,cAAC,EAAD,CAAUvB,SAAUiB,W,GA7BdO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.84ae0f5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2> {props.monster.name }</h2>\r\n        <p> {props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className = 'card-list'>\r\n    { props.monsters.map(monster => (\r\n        <Card key = {monster.id} monster = {monster}/>\r\n    ))}\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className='search'\r\n        type = 'search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)","import React, { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport {SearchBox} from './components/search-box/search-box.component'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monsters: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ monsters: users}))\r\n    }\r\n\r\n    render() {\r\n        const { monsters, searchField } = this.state;\r\n        const filteredMonsters = monsters.filter( monsters =>\r\n                monsters.name.toLowerCase().includes(searchField.toLowerCase())\r\n            )\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1> Monsters Rollodex</h1>\r\n            <SearchBox\r\n                placeholder='search monsters'\r\n                handleChange={e =>\r\n                this.setState({ searchField: e.target.value})}\r\n            />\r\n            <CardList monsters={filteredMonsters}/>\r\n\r\n        </div>\r\n    );\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}